.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GINN 1"
.TH GINN 1 "2012-07-30" "" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ginn \- Gesture to Keypress / Mouse Button injector
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ginn [<specific configuration file>]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBginn\fR is a program to test support gestures in legacy applications without the
need to rewrite them.  This support is made by injecting keypresses or mouse
buttons after matching rules from wishes.xml file.
.PP
You can define the matching rules by expressing \fIwishes\fR. Each wish contains
the name of the gesture, number of fingers, the matching rules.
The keypress to inject is defined by \fIkey\fR tag, and the mouse button by
\&\fIbutton\fR, you can add also up to 4 modifiers keys like \fIControl_L\fR.
.SS "\s-1EXAMPLES\s0"
.IX Subsection "EXAMPLES"
Sample wishes file:
.PP
.Vb 10
\&    <ginn>
\&    <global>
\&      <wish gesture="Drag" fingers="2">
\&        <action name="action5" when="update">
\&          <trigger prop="delta y" min="20" max="80"/>
\&          <key>Down</key>
\&        </action>
\&      </wish>
\&    </global>
\&    <applications>
\&      <application name="inkscape">
\&        <wish gesture="Pinch" fingers="2">
\&          <action name="action1" when="update">
\&            <trigger prop="radius delta" min="\-200" max="\-40"/>
\&            <key>KP_Subtract</key>
\&          </action>
\&        </wish>
\&      </application>
\&    </applications>
\&    </ginn>
.Ve
.PP
Gesture type can be: Drag, Pinch, Rotate or Tap
The time of injection can be selected by using \fIupdate\fR to inject when the
gesture is received or \fIfinish\fR to inject when the gesture is finished.
The choice should be written inside the \fIwhen\fR in the action line.
        <action name=\*(L"action1\*(R" when=\*(L"update\*(R">
.PP
The Open Input Framework gesture stack provide gesture updates which can be very small to
reach the desired interval specified in the trigger.
To provide more flexibility a gesture accumulation is performed by default to
the successive property values' updates for a desired gesture until it reaches
the min-max intervall or the gesture finish, then, the accumlation buffer is
reinitialized.
If you want to disable this feature you can specify it explicitly:
        <trigger prop=\*(L"delta x\*(R" min=\*(L"\-80\*(R" max=\*(L"\-40\*(R" accumulate=\*(L"false\*(R"/>
.PP
The attributes used in trigger can be obtained by running geistest, you can 
also refer to the list below.
You can use more than one trigger, but you need to use them in the same order
as they appear in the list below.
.PP
.Vb 10
\&    Sub\-list of general attributes
\&     "device id"       = 13
\&     "timestamp"       = 180598198
\&     "root window id"  = 254
\&     "event window id" = 159825921
\&     "child window id" = 159825921
\&     "focus x"         = 0.000000
\&     "focus y"         = 0.000000
\&     "gesture name"    = "Drag"
\&     "touches"         = 1
\&      
\&    Sub\-list of attributes used with Drag gesture
\&     "delta x"    = \-8.933333 
\&     "delta y"    = 22.000000
\&     "velocity x" = \-0.638095
\&     "velocity y" = 1.571429
\&     "position x" = 634.533386
\&     "position y" = 482.777771
\&
\&    Sub\-list of attributes used with Rotate gesture
\&     "angle delta"      = \-0.358113 
\&     "angular velocity" = \-0.029843
\&     "angle"            = \-1.159999
\&     
\&    Sub\-list of attributes used with Pinch gesture
\&     "radius delta"    = \-44.935688
\&     "radial velocity" = \-3.209692
\&     "radius"          = 180.466690
\&     
\&    Sub\-list of attributes used with Tap gesture
\&     "tap time"   = 74.000000 
\&     "position x" = 740.933350
\&     "position y" = 469.333344
\&     
\&    Last attribues in the general list
\&     "boundingbox x1" = 634.533386
\&     "boundingbox y1" = 482.777771
\&     "boundingbox x2" = 634.533386
\&     "boundingbox y2" = 482.777771
\&     "touch 0 id"     = 1079.000000
\&     "touch 0 x"      = 634.533386
\&     "touch 0 y"      = 482.777771
.Ve
.PP
The names of keys list can be obtained after removing the \s-1XK_\s0 prefix from
/usr/include/X11/keysymdef.h file
.PP
.Vb 9
\& The mouse buttons are written with their corresponding number:
\&    1   Left Button
\&    2   Middle Button
\&    3   Right Button
\&    4   Wheel Up
\&    5   Wheel Down
\&    6   Horizontal Wheel Left
\&    7   Horizontal Wheel Right
\&    8   "Back" in browsers
.Ve
.SH "FILES"
.IX Header "FILES"
\&\fI/etc/ginn/wishes.xml\fR
User customized wishes file.
.PP
\&\fI/usr/share/ginn/wishes.xml\fR
Basic ginn wishes file installed for reference.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
geistest
.SH "AUTHOR"
.IX Header "AUTHOR"
Mohamed Ikbel Boulabiar <boulabiar@gmail.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010\-2011 by Canonical, Ltd.
